<!-- View/Page Styling for the Admin Mode
This Component is linked to admin.js -->
<can-import from="can-stache/helpers/route" />
<a href="{{routeUrl page='eventList' }}"
   class="btn btn-primary btn-block btn-lg">
  View Events
</a>
<!-- two centered columns side by side -->
  <div class="container">
  <script>
    window.numBoxes = 0;
  </script>
    <div class="row">
      <!-- left column spacer -->
      <div class="col-lg-3"></div>

      <!-- left column info -->
      <div class="col-lg-4">
        <h3>Name</h3>
        <input type="text" id="eventName">
        <!--<h3>Host</h3>
        <input type="text" id="host">-->

        <h3>Month</h3>
        <!-- creates month dropdown menu -->
        <!-- when month selected, also starts function to generate days -->
          <select id="eventMonth" onchange="addDay('dayInput');check()">
            <option value="null" selected></option>
            <option value="jan">January</option>
            <option value="feb">February</option>
            <option value="mar">March</option>
            <option value="apr">April</option>
            <option value="may">May</option>
            <option value="jun">June</option>
            <option value="jul">July</option>
            <option value="aug">August</option>
            <option value="sep">September</option>
            <option value="oct">October</option>
            <option value="nov">November</option>
            <option value="dec">December</option>
          </select>
        <h3>Day</h3>
        <div id="dayInput"></div>
          <select id="eventDay"></select>
          <!-- script to dynamically alot the correct amount of days per month -->
          <script>
          var monthDict = {
        	   "jan" : 31,
             "feb" : 28,
             "mar" : 31,
             "apr" : 30,
             "may" : 31,
             "jun" : 30,
             "jul" : 31,
             "aug" : 31,
             "sep" : 30,
             "oct" : 31,
             "nov" : 30,
             "dec" : 31
              };

          /**
          * Adds HTML based on month input
          * @method addDay
          * @param {} divName
          * @return
          */
          function addDay(divName) {
            // if there is already an eventDay var, remove it and make new. this avoids stacking
            document.getElementById("eventDay").remove();
            var newDiv = document.createElement('div');
            var mon = document.getElementById("eventMonth").value;
            var numDay = monthDict[mon];
            // creates the selection HTML framework
            var selectHTML="<select id='eventDay' onchange='check()'><option value='null' selected></option>";
            // for each day, adds a new option
            for(i = 1; i <= numDay; i += 1) {
                selectHTML += "<option value='" + i + "'>" + i + "</option>";
            }
            selectHTML += "</select><input ";
            newDiv.innerHTML = selectHTML;
            // adds to script
            document.getElementById(divName).appendChild(newDiv);
          }
          </script>
      </div>

      <!-- right column info -->
      <div class="col-lg-3">

        <h3>Hour Scheme</h3>
        <!-- dropdown created to gauge 12 or 24 hour setting -->
        <!-- when time selected, runs script to generate possible starting and ending times -->
        <select id="eventHour" onchange="addStartTimes();check()">
          <option value="null" selected></option>
          <option value="24">24 Hour</option>
          <option value="am">12 Hour</option>
        </select>

        <h3>Start time</h3>
        <div id="startInput">
        <select id="eventStart"></select>
        <!-- script to dynamically fill in time drop down -->
        <!-- when starting choice is made, runs script to fill in end times -->
        <script>
        /**
         * Fills in time based off user input
         * @method addStartTimes
         * @return
         */
          function addStartTimes() {
            // if there is already an eventStart var, remove it and make new. this avoids stacking
            document.getElementById("eventStart").remove();

            var newDiv = document.createElement('div');
            // start the selection framework
            var innerHtml = "<select id='eventStart' onchange='addEndTimes();check()'><option value='null' selected disabled>Start Time 1</option>";
            // if the hour scheme is 12 hours
            if (document.getElementById("eventHour").value != "24") {

            for (i=0; i<2; i++){
              // preface with 12 and 12:30 first because of weird naming structure
              innerHtml += "<option value='12'>12";
                  if (i ==0){
                      innerHtml += "AM</option>";
                  }
                  else{
                      innerHtml += "PM</option>";
                      }
              innerHtml += "<option value='12:30'>12:30";
                  if (i ==0){
                      innerHtml += "AM</option>";
                  }
                  else{
                      innerHtml += "PM</option>";
                  }
              var j;
              for (j = 1; j <= 11; j += 1) {
                innerHtml += "<option value='" + j + "'>" + j;
                if (i ==0){
                    innerHtml += "AM</option>";
                }
                else{
                    innerHtml += "PM</option>";
                }

                innerHtml += "<option value='" + j + ":30'>" + j + ":30";
                if (i ==0){
                    innerHtml += "AM</option>";
                }
                else{
                    innerHtml += "PM</option>";
                }
              }
              }
              innerHtml += "</select><input ";
            }
            // if hour scheme is 24 hours
            else {
              for (i = 0; i < 24; i += 1) {
                innerHtml += "<option value='" + i + "'>" + i + "</option>";
                innerHtml += "<option value='" + i + ":30'>" + i + ":30</option>";
              }
              innerHtml += "</select><input ";
            }
            // assign new script to file
            newDiv.innerHTML = innerHtml;
            newDiv.setAttribute("boxIndex", 0);
            document.getElementById("startInput").appendChild(newDiv);
          }
        </script>
        </div>


        <h3>End time</h3>
        <div id="endInput">
        <select id="eventEnd"></select>
        <!-- script to fill in the end time drop down -->
        <script>
        /**
         * Fills in time based off user input
         * @method addEndTimes
         * @return
         */
          function addEndTimes() {

            // if there is already an eventEnd var, remove it and make new. this avoids stacking
            document.getElementById("eventEnd").remove();
            // create drop down menu framework
            var newDiv = document.createElement('div');
            var innerHtml = "<select id='eventEnd' onchange='check()'><option value='null' selected disabled>End Time 1</option>";
            // if the hour scheme is 12
            if (document.getElementById("eventHour").value != "24") {
              // get the start value and make it into a number
              var startBox = document.getElementById("eventStart");
              var start_time = startBox.options[startBox.selectedIndex].text;
              var startIndex = document.getElementById("eventStart").selectedIndex;
              var new_start = parseInt(start_time);
              // if necessary, make some additions
              if (start_time.indexOf(":") == -1) {
                innerHtml += "<option value='" + start_time.slice(0,-2) + ":30'>" + start_time.slice(0,-2) + ":30";
                if(startIndex<25){
                    innerHtml+= "AM"  + "</option>";
                }
                else{
                    innerHtml+= "PM"  + "</option>";
                }
                // anticipate weird US time naming conventions 12AM-12:30AM-1AM
                if (new_start == 24) {
                  new_start = 0;
                }
              }
              if (start_time.indexOf("PM") !== -1 && start_time !== "12PM" && start_time !== "12:30PM"){

                  new_start +=12;
              }
              if(startIndex == 0 || startIndex == 1){
                new_start -= 12;
              }
              window.alert(new_start);
              for (i = new_start + 1; i <= 23; i += 1) {

                var time = i%12;
                if (time == 0){
                    time = 12;
                }

                innerHtml += "<option value='" + time + "'>" + time;
                if (i<11){
                    innerHtml += "AM"  + "</option>";
                }
                else{
                    innerHtml += "PM"  + "</option>";
                }
                innerHtml += "<option value='" + time + ":30'>" + time + ":30";
                if (i<11){
                    innerHtml += "AM"  + "</option>";
                }
                else{
                    innerHtml += "PM"  + "</option>";
                }
              }
              innerHtml += "</select><input ";
            }
            // if the hour scheme is 24
            else {
              // get the previous start value
              var start_time = document.getElementById("eventStart").value;
              var new_start = parseInt(start_time);
              // if necessary, make additions
              if (start_time.indexOf(":") == -1) {
                innerHtml += "<option value='" + start_time + ":30'>" + start_time + ":30</option>";
              }
              for (i = new_start + 1; i < 24; i += 1) {
                innerHtml += "<option value='" + i + "'>" + i + "</option>";
                innerHtml += "<option value='" + i + ":30'>" + i + ":30</option>";
              }
              innerHtml += "</select><input ";
            }
            // add script to file
            newDiv.innerHTML = innerHtml;
            newDiv.setAttribute("boxIndex", 0);
            document.getElementById("endInput").appendChild(newDiv);
          }
        </script>
        </div>
      </div>
      <!-- right column spacer -->
      <div class="col-lg-3"></div>
    </div>
  </div>

  <div class="wrapper">
    <!-- sets the user inputs to global variables -->
    <!-- creates event obj -->
    <input id="eventButton" type="button" value="Create Event" ($click)="newEvent" disabled>

    <script>
      /**
      * Checks if the current configs are valid
      * @method check
      * @return
      */
      function check() {
        // checks if name is not blank
        var zero = document.getElementById("eventName").value != "";
        // checks if month is selected
        var one = document.getElementById("eventMonth").value != "null";
        // checks if day is selected
        var two = document.getElementById("eventDay").value != "null";
        // checks if hour scheme is selected
        var three = document.getElementById("eventHour").value != "null";
        // checks if start time is selected
        var four = document.getElementById("eventStart").value != "null";
        // checks if end time is selected
        var five = document.getElementById("eventEnd").value != "null";

        if (three) {
            document.getElementById("addSlotsButton").disabled = false;
            }
          else {
            document.getElementById("addSlotsButton").disabled = true;
          }

      // if all are ready to go, allow event creation
      if (zero && one && two && three && four && five) {
        document.getElementById("eventButton").disabled = false;
        }
      else {
        document.getElementById("eventButton").disabled = true;
        }
      }
      </script>

    <!-- prints variables to the console to test if they were received as gloabl -->
    <!-- <button ($click)="printItems">Print</button> -->
    <input id="addSlotsButton" type="button" value="Add Time Slot" ($click)="addTimeSlot" disabled>
        <script>
          /**
          * Checks if the current configs are valid
          * @method check
          * @return
          */
          function checkAddSlot() {
            // checks if hour scheme is selected

          </script>

  </div>
